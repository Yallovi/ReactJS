{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","Classes","Dialog","src","img","alt","to","link","name","Message","message","maxLength10","maxLengthCreater","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","formMessage","Field","component","Textarea","validate","required","placeholder","type","Dialogs","state","messagesPage","dialogsElements","dialogsData","map","dialog","messageItem","massagesData","mess","DialogsItem","Messages","values","addMessage","newMessageBody","compose","withRouter","withAuthRedirect","connect","dispatch","addMessageActionCreater"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,2FCiBrJC,EAbI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAKC,UAAaC,IAAQC,OAA1B,UACI,qBAAKC,IAAKN,EAAMO,IAAKC,IAAI,WACzB,cAAC,IAAD,CAASC,GAAKR,EAAME,UAAYC,IAAQM,KAAxC,SAA+CV,EAAMW,WCJlDC,EALC,SAACZ,GACb,OACI,sBAAKG,UAAaC,IAAQQ,QAA1B,UAAoCZ,EAAMa,QAA1C,Q,kCCiCFC,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,EAbL,SAACjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAcjB,UAAaC,IAAQiB,YAAzD,UACI,8BACI,cAACC,EAAA,EAAD,CAAOX,KAAM,iBAAkBY,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,GAAca,YAAa,yBAExG,8BACI,wBAAQC,KAAK,SAAb,4BAQDC,EA7CC,SAAC7B,GAEb,IAAI8B,EAAQ9B,EAAM+B,aAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAC,GAAM,OAAI,cAAC,EAAD,CAAYxB,KAAQwB,EAAOxB,KAAsBT,GAAMiC,EAAOjC,GAAIK,IAAM4B,EAAO5B,KAAzC4B,EAAOjC,OAC/FkC,EAAcN,EAAMO,aAAaH,KAAK,SAAAI,GAAI,OAAI,cAAC,EAAD,CAASzB,QAAWyB,EAAKzB,SAAeyB,EAAKpC,OAQ/F,OACI,sBAAKC,UAAaC,IAAQyB,QAA1B,UACI,qBAAK1B,UAAaC,IAAQmC,YAA1B,SACI,6BACKP,MAGT,sBAAK7B,UAAaC,IAAQoC,SAA1B,UACKJ,EACD,cAACpB,EAAD,CAAsBG,SAfjB,SAACsB,GACdzC,EAAM0C,WAAWD,EAAOE,0B,gCCUjBC,sBACXC,IACAC,IACAC,aAlBkB,SAACjB,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAKH,SAACiB,GACtB,MAAO,CACHN,WAAY,SAACC,GACTK,EAASC,YAAwBN,SAK9BC,CAIbf","file":"static/js/4.ce278f5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__2lmVq\",\"Dialog\":\"Dialogs_Dialog__3_rAQ\",\"Message\":\"Dialogs_Message__fdSfr\",\"link\":\"Dialogs_link__3MVT-\",\"formMessage\":\"Dialogs_formMessage__3SGw6\"};","import React from 'react';\r\nimport Classes from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    // debugger;\r\n    let path = \"/dialogs/\" + props.id;\r\n    \r\n    return (        \r\n        <li  className = {Classes.Dialog}>\r\n            <img src={props.img} alt=\"avatar\" />\r\n            <NavLink to= {path} className ={Classes.link}>{props.name}</NavLink> \r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport Classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className = {Classes.Message}>{props.message} </div> \r\n    )\r\n};\r\nexport default Message;","import React from 'react';\r\n// import { addMessageActionCreater, uppdateNewMessageActionCreater } from '../../redux/DialogsReducer';\r\nimport Classes from './Dialogs.module.css';\r\nimport DialogItem from '../Dialogs/DialogItem/DialogItem';\r\nimport Message from '../Dialogs/Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControll/FormsControls';\r\nimport {required , maxLengthCreater} from '../utils/validators/validator';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name = {dialog.name} key={dialog.id} id = {dialog.id} img ={dialog.img}/>);\r\n    let messageItem = state.massagesData.map( mess => <Message message = {mess.message} key ={mess.id} />);\r\n\r\n    const onSubmit = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    };\r\n\r\n\r\n    // if(!props.isAuth) return <Redirect to={\"/login\"} />\r\n    return (\r\n        <div className = {Classes.Dialogs}>\r\n            <div className = {Classes.DialogsItem}> \r\n                <ul>\r\n                    {dialogsElements}\r\n                </ul>\r\n            </div> \r\n            <div className = {Classes.Messages}> \r\n                {messageItem}\r\n                <AddMessageFormRedux  onSubmit={onSubmit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreater(10);\r\n\r\nconst addMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className = {Classes.formMessage}>\r\n            <div>\r\n                <Field name={\"newMessageBody\"} component={Textarea} validate={[required, maxLength10]} placeholder={\"Enter your message\"}></Field>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form:'dialogaddMessageForm'})(addMessageForm);\r\n\r\nexport default Dialogs;  ","import React from 'react';\r\nimport { addMessageActionCreater} from '../../redux/DialogsReducer';\r\nimport Classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage, \r\n\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addMessage: (newMessageBody) =>{\r\n            dispatch(addMessageActionCreater(newMessageBody));\r\n        },\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)    \r\n)(Dialogs);\r\n"],"sourceRoot":""}