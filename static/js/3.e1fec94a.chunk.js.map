{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","Classes","item","src","alt","message","likeCounts","maxLength30","maxLengthCreater","addNewPost","onSubmit","handleSubmit","formPosts","Field","name","component","Textarea","validate","required","placeholder","AddNewPostRedux","reduxForm","form","MyPosts","React","memo","console","log","posts","map","mess","likesCount","title","values","addPost","newPost","post","MyPostsContainer","connect","state","newPostText","dialogsPage","postsData","dispatch","addPostActionCreater","Component","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","uppdateUserStatus","autoFocus","ProfileInfo","profile","img","info","photos","large","Preloader","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getUserStatus","compose","withRouter","withAuthRedirect","auth","id","isAuth"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,UAAY,6B,oBCA7DD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,IAAM,qBAAqB,KAAO,wB,oBCAvFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,yBAAyB,KAAO,0BAA0B,KAAO,4B,wKCejHC,EAbF,SAACC,GAEV,OACE,sBAAKC,UAAaC,IAAQC,KAA1B,UACE,qBAAKC,IAAI,kHAAkHC,IAAI,KAC9HL,EAAMM,QACP,8BACE,iCAAON,EAAMO,WAAb,kB,gBCHJC,EAAeC,YAAiB,IAEhCC,EAAa,SAACV,GAClB,OACE,uBAAMW,SAAUX,EAAMY,aAAcX,UAAaC,IAAQW,UAAzD,UACM,8BACF,cAACC,EAAA,EAAD,CAAOC,KAAM,UAAWC,UAAWC,IAAUC,SAAW,CAACC,IAAUX,GAAeY,YAAa,yBAE7F,kDAIJC,EAAkBC,YAAU,CAACC,KAAMb,GAAjBY,CAA8BZ,GAiCvCc,EA/BEC,IAAMC,MAAK,SAAA1B,GAaxB2B,QAAQC,IAAI,aACd,IAAMC,EAAQ7B,EAAM6B,MAAMC,KAAK,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAMzB,QAASyB,EAAKzB,QAAUC,WAAYwB,EAAKC,gBAMtF,OACE,sBAAK/B,UAAaC,IAAQ+B,MAA1B,qBACE,cAACZ,EAAD,CAAiBV,SAPJ,SAACuB,GACjBlC,EAAMmC,QAAQD,EAAOE,YAOlB,qBAAKnC,UAAWC,IAAQmC,KAAxB,SACKR,U,QCpBIS,EAFUC,aAhBH,SAACC,GACnB,MAAO,CACLC,YAAaD,EAAME,YAAYD,YAC/BZ,MAAOW,EAAME,YAAYC,cAIN,SAACC,GACxB,MAAO,CACLT,QAAS,SAACC,GACRQ,EAASC,YAAqBT,QAMXG,CAA6Cf,G,4CCpB1CC,IAAMqB,U,aCCnB,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,GIF/F,IAoCQC,EApCuB,SAACtE,GACnC,QAA8BuE,oBAAS,GAAvC,GAAKC,EAAL,KAAeC,EAAf,KACA,IAA0BF,mBAASvE,EAAM0E,QAAzC,GAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAU,WACND,EAAU3E,EAAM0E,UACjB,CAAC1E,EAAM0E,SAeV,OACE,iCACIF,GACE,8BACI,uBAAMK,cAjBM,WACpBJ,GAAY,IAgBJ,cAAyCzE,EAAM0E,QAAU,OAAzD,SAGPF,GACG,8BACI,uBAAOM,SAbI,SAACC,GACpBJ,EAAUI,EAAEC,cAAcf,QAYegB,OAlBnB,WACtBR,GAAY,GACZzE,EAAMkF,kBAAkBR,IAgB4CS,WAAW,EAAMlB,MAAOS,UCTrFU,EAlBK,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,QAASX,EAA8B,EAA9BA,OAAOQ,EAAuB,EAAvBA,kBACpC,OAAIG,EAKA,gCACE,8BACE,qBAAKpF,UAAWC,IAAQoF,IAAKlF,IAAI,0KAEnC,qBAAKH,UAAWC,IAAQqF,KAAxB,SACE,qBAAKnF,IAAKiF,EAAQG,OAAOC,UAG3B,oCAAM,cAAC,EAAD,CAAwBf,OAAQA,EAAQQ,kBAAmBA,IAAjE,UAZG,cAACQ,EAAA,EAAD,KCKIC,EARC,SAAC3F,GACf,OACI,sBAAKC,UAAYC,IAAQ0F,QAAzB,UACE,cAAC,EAAD,CAAaP,QAASrF,EAAMqF,QAASX,OAAQ1E,EAAM0E,OAAQQ,kBAAmBlF,EAAMkF,oBACpF,cAAC,EAAD,Q,wBCDFW,E,uKAEN,WACI,IAAIC,EAASC,KAAK/F,MAAMgG,MAAMC,OAAOH,OACjCA,IAAQA,EAASC,KAAK/F,MAAMkG,kBAC7BH,KAAK/F,MAAMmG,eAAeL,GAC1BC,KAAK/F,MAAMoG,cAAcN,K,oBAG9B,WACE,OACE,cAAC,EAAD,2BAAaC,KAAK/F,OAAlB,IAAyBqF,QAASU,KAAK/F,MAAMqF,QAASX,OAAQqB,KAAK/F,MAAM0E,OAAQQ,kBAAmBa,KAAK/F,MAAMkF,yB,GAXtFzD,IAAMqB,WA4BtBuD,sBACbC,IACAC,IACAhE,aAdoB,SAACC,GACrB,MAAO,CACH6C,QAAS7C,EAAME,YAAY2C,QAC3BX,OAAQlC,EAAME,YAAYgC,OAC1BwB,iBAAkB1D,EAAMgE,KAAKC,GAC7BC,OAAQlE,EAAMgE,KAAKE,UASE,CAACP,mBAAgBC,kBAAelB,wBAH5CmB,CAIbR","file":"static/js/3.e1fec94a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyPosts_title__y_6aH\",\"formPosts\":\"MyPosts_formPosts__3PYcb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2n4Gz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1LkY4\",\"img\":\"Profile_img__163T0\",\"item\":\"Profile_item__3OzP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2jBKZ\",\"img\":\"ProfileInfo_img__22eer\",\"item\":\"ProfileInfo_item__3nwEK\",\"info\":\"ProfileInfo_info__2mKvk\"};","import React from 'react';\r\nimport Classes  from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n      <div className = {Classes.item}> \r\n        <img src=\"https://img01.rl0.ru/afisha/e1200x600i/daily.afisha.ru/uploads/images/2/f2/2f23c421db983f28be0a4d9e84fe1d3d.png\" alt=\"\" />\r\n        {props.message}\r\n        <div>\r\n          <span>{props.likeCounts} likes</span>\r\n        </div>\r\n      </div>\r\n      \r\n    )\r\n}\r\nexport default Post;","import React ,{PureComponent} from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport Classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {required , maxLengthCreater} from '../../utils/validators/validator';\r\nimport { Textarea } from '../../../common/FormsControll/FormsControls';\r\n\r\nconst maxLength30 =  maxLengthCreater(30);\r\n\r\nconst addNewPost = (props) => {\r\n  return(\r\n    <form onSubmit={props.handleSubmit} className = {Classes.formPosts}>\r\n          <div>\r\n        <Field name={\"newPost\"} component={Textarea} validate ={[required, maxLength30]}  placeholder={\"Enter your message\"} />\r\n          </div>\r\n          <button>Add Post</button>\r\n      </form>\r\n  )\r\n} \r\nconst AddNewPostRedux = reduxForm({form: addNewPost})(addNewPost) \r\n\r\nconst MyPosts =  React.memo(props => {\r\n\r\n\r\n  // componentDidMount() {\r\n  //   setTimeout(() =>{\r\n  //     this.setState({a:12})\r\n  //   }, 3000)\r\n  // }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != this.props || nextState != this.state\r\n  // }\r\n\r\n    console.log(\"Render YO\")\r\n  const posts = props.posts.map( mess => <Post message={mess.message}  likeCounts={mess.likesCount}/>);\r\n  const onSubmit = (values) => {\r\n   props.addPost(values.newPost);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className = {Classes.title }>my posts\r\n      <AddNewPostRedux onSubmit= {onSubmit} />\r\n      <div className={Classes.post}>\r\n          {posts}\r\n      </div>\r\n    </div>\r\n)\r\n\r\n  \r\n}) \r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreater} from '../../../redux/ProfileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n      newPostText: state.dialogsPage.newPostText,\r\n      posts: state.dialogsPage.postsData\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    addPost: (newPost) => {\r\n      dispatch(addPostActionCreater(newPost));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    };\r\n\r\n    activedEditMode =  () =>{\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n        // this.state.editMode = true;\r\n    }\r\n    deactivedEditMode = () =>{\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n       this.props.uppdateUserStatus(this.state.status);\r\n    };\r\n    onStatusChange = (e) =>{\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    copmonentDidUpdate(prevProps, prevState){\r\n            if(prevProps.status !== this.props.status){\r\n                this.state({\r\n                    status: this.props.status\r\n                })\r\n            }\r\n    }\r\n    render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode &&\r\n            <div> \r\n                <span onDoubleClick={this.activedEditMode}> {this.props.status || '----'} </span> \r\n            </div>\r\n        }\r\n        {this.state.editMode &&\r\n            <div>\r\n                <input onChange={this.onStatusChange} value={this.state.status} autoFocus={true} onBlur={this.deactivedEditMode} />\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n    }\r\n}\r\nexport default ProfileStatus;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() =>{\r\n        setStatus(props.status);\r\n    }, [props.status]);     \r\n\r\n    const activedEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivedEditMode = () => {\r\n        setEditMode(false);\r\n        props.uppdateUserStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {!editMode &&\r\n            <div> \r\n                <span onDoubleClick={activedEditMode} > {props.status || '----'} </span> \r\n            </div>\r\n        }\r\n        {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={deactivedEditMode} autoFocus={true} value={status}/>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport Classes  from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status,uppdateUserStatus}) => {\r\n  if(!profile){\r\n    return <Preloader />\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <img className={Classes.img} src=\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\"/>\r\n        </div>\r\n        <div className={Classes.info}>\r\n          <img src={profile.photos.large}/>\r\n        </div>\r\n\r\n        <div> <ProfileStatusWithHooks status={status} uppdateUserStatus={uppdateUserStatus} /> </div>\r\n      </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Classes  from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n      <div className= {Classes.content}>\r\n        <ProfileInfo profile={props.profile} status={props.status} uppdateUserStatus={props.uppdateUserStatus}/>\r\n        <MyPostsContainer />\r\n      </div>  \r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile,getUserStatus,uppdateUserStatus} from '../../redux/ProfileReducer';\r\nimport { withAuthRedirect } from '../Hoc/withAuthRedirect';\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\ncomponentDidMount(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){userId = this.props.authorizedUserId;}\r\n       this.props.getUserProfile(userId);\r\n       this.props.getUserStatus(userId);\r\n  }\r\n  \r\n  render(){\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} uppdateUserStatus={this.props.uppdateUserStatus} />\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      profile: state.dialogsPage.profile,\r\n      status: state.dialogsPage.status,\r\n      authorizedUserId: state.auth.id,\r\n      isAuth: state.auth.isAuth,\r\n\r\n  };\r\n};\r\n\r\n\r\nexport default compose(\r\n  withRouter,\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, uppdateUserStatus})\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}